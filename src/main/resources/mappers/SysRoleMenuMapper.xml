<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.spring.springboot.dao.SysRoleMenuMapper" >
  <resultMap id="BaseResultMap" type="org.spring.springboot.domain.SysRoleMenu" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="menu_id" property="menuId" jdbcType="INTEGER" />
    <result column="is_active" property="isActive" jdbcType="CHAR" />
    <result column="created_by" property="createdBy" jdbcType="INTEGER" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="last_updated_by" property="lastUpdatedBy" jdbcType="INTEGER" />
    <result column="last_updated_time" property="lastUpdatedTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, role_id, menu_id, is_active, created_by, created_time, last_updated_by, last_updated_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_sys_role_menu
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteById" parameterType="java.lang.Integer" >
    delete from t_sys_role_menu
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_sys_role_menu
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.spring.springboot.domain.SysRoleMenu" >
    insert into t_sys_role_menu (id, role_id, menu_id, 
      is_active, created_by, created_time, 
      last_updated_by, last_updated_time)
    values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{menuId,jdbcType=INTEGER}, 
      #{isActive,jdbcType=CHAR}, #{createdBy,jdbcType=INTEGER}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{lastUpdatedBy,jdbcType=INTEGER}, #{lastUpdatedTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.spring.springboot.domain.SysRoleMenu" >
    insert into t_sys_role_menu
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="menuId != null" >
        menu_id,
      </if>
      <if test="isActive != null" >
        is_active,
      </if>
      <if test="createdBy != null" >
        created_by,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="lastUpdatedBy != null" >
        last_updated_by,
      </if>
      <if test="lastUpdatedTime != null" >
        last_updated_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="menuId != null" >
        #{menuId,jdbcType=INTEGER},
      </if>
      <if test="isActive != null" >
        #{isActive,jdbcType=CHAR},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdatedBy != null" >
        #{lastUpdatedBy,jdbcType=INTEGER},
      </if>
      <if test="lastUpdatedTime != null" >
        #{lastUpdatedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.spring.springboot.domain.SysRoleMenu" >
    update t_sys_role_menu
    <set >
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="menuId != null" >
        menu_id = #{menuId,jdbcType=INTEGER},
      </if>
      <if test="isActive != null" >
        is_active = #{isActive,jdbcType=CHAR},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdatedBy != null" >
        last_updated_by = #{lastUpdatedBy,jdbcType=INTEGER},
      </if>
      <if test="lastUpdatedTime != null" >
        last_updated_time = #{lastUpdatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.spring.springboot.domain.SysRoleMenu" >
    update t_sys_role_menu
    set role_id = #{roleId,jdbcType=INTEGER},
      menu_id = #{menuId,jdbcType=INTEGER},
      is_active = #{isActive,jdbcType=CHAR},
      created_by = #{createdBy,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      last_updated_by = #{lastUpdatedBy,jdbcType=INTEGER},
      last_updated_time = #{lastUpdatedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="hasPrivilleges" resultType="java.lang.Integer" parameterType="java.util.Map">
    select count(1) from t_sys_user_role ur
		join
		t_sys_role_menu rm on rm.ROLE_ID = ur.ROLE_ID
		join t_sys_menu m on m.id
		= rm.MENU_ID
		where ur.USER_ID = #{userid} and m.MENU_HREF = #{pageurl}
  </select>

  <select id="selectEverywhere" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from
    t_t_sys_role role
    left  join
    t_sys_role_menu rolemenu
    on
    role.id=rolemenu.role_id
    WHERE role.id =#{searchValue}
    and is_delete=0
  </select>

    <resultMap id="RoleMenuResultMap" type="org.spring.springboot.response.SysRoleMenuResponse" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="role_id" property="roleId" jdbcType="INTEGER" />
        <result column="menu_id" property="menuId" jdbcType="INTEGER" />
        <result column="is_active" property="isActive" jdbcType="CHAR" />
        <result column="created_by" property="createdBy" jdbcType="INTEGER" />
        <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
        <result column="last_updated_by" property="lastUpdatedBy" jdbcType="INTEGER" />
        <result column="last_updated_time" property="lastUpdatedTime" jdbcType="TIMESTAMP" />

        <result column="menu_name" property="menuName" jdbcType="VARCHAR" />
        <result column="menu_desc" property="menuDesc" jdbcType="VARCHAR" />
        <result column="menu_icon" property="menuIcon" jdbcType="VARCHAR" />
        <result column="menu_type" property="menuType" jdbcType="VARCHAR" />
        <result column="menu_href" property="menuHref" jdbcType="VARCHAR" />
        <result column="parent_id" property="parentId" jdbcType="INTEGER" />
        <result column="sort" property="sort" jdbcType="INTEGER" />
        <result column="is_show" property="isShow" jdbcType="CHAR" />

        <result property="parentMenu.id" column="parentMenu.id"/>
        <result property="parentMenu.menuName" column="parentMenu.menuName"/>
    </resultMap>

    <sql id="RoleMenu_Column_List" >
    rolemenu.id as id,
    rolemenu.role_id,
    rolemenu.menu_id,
    rolemenu.is_active,
    rolemenu.created_by,
    rolemenu.created_time,
    rolemenu.last_updated_by,
    rolemenu.last_updated_time,
     menu.menu_name,
     menu.menu_desc,
     menu.menu_icon,
     menu.menu_type,
     menu.menu_href,
     menu.parent_id,
     menu.sort,
     menu.is_show,
     menu.parent_id as "parentMenu.id"
  </sql>
    <select id="selectEverywhereId" parameterType="java.util.Map" resultMap="RoleMenuResultMap">
        select
        <include refid="RoleMenu_Column_List" />
        from
        t_sys_role_menu rolemenu
        left  join
        t_sys_role role
        on
        role.id=rolemenu.role_id
        left join
        t_sys_menu menu
        on
        menu.id = rolemenu.menu_id
        WHERE role.id =#{searchValue}
        and rolemenu.is_delete=0
    </select>
</mapper>